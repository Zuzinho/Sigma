@model ValueTuple<List<Sigma.Models.Project>, List<Sigma.Models.User>, List<int>>
@using Sigma;
@{
    Layout = "//Views//MasterViewIndex.cshtml";
}

<div class="portfolios">
    <div class="portfolios_title">Last Portfolios</div>
    @if (Model.Item2.Count > 0)
    {
<div class="portfolios__row">
    @foreach (var user in Model.Item2)
    {
        int count = 0;
        var user_projects = Model.Item1.Where(x => x.user_id == user.Id).ToList();
        var sorted_user_user_projects = Sorting.Selected_sort(user_projects);

        <a class="user_page" href="@Url.Action("UserPage", "Home", new { item_id = user.Id })">
            <div class="portfolios__item item">
                <div class="item__row">
                    <div class="item__title">
                        <img src="@user.avatarUrl" alt="" class="title__image">
                        <div class="item__info">
                            <p class="title_name">@user.Name</p>
                            <p class="title_main_skill">@user.position</p>
                        </div>
                        <div class="item__skills">


                            @foreach (var project in sorted_user_user_projects)
                            {
                                <div class="item__skill skill">
                                    <div class="skill__info">@project.Title</div>
                                    @if (project.technology != "")
                                    {
                                        <div class="skill__name"><p>@project.technology.Split(',')[0]</p></div>
                                    }
                                </div>
                                count++;
                                if (count == 3)
                                {
                                    break;
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </a>
    }
    @if (Model.Item2.Count % 3 == 2)
    {
        <a class="user_page" hidden>

        </a>
    }
</div>
    }
    else
    {
        <div>
            <img src="~/Content/img/searcherror.jpg" alt="" class="error_image">
        </div>
        <div>
            <p class="error_text">What a crap! Nothing was found :(</p>
        </div>
    }
</div>
<div class="page_turner">
    <div class="page_turner__row pages">
        <div class="pages__arrow_left"></div>
        <div class="pages__values">
            @if (Model.Item3.Count > 1)
            {
                int current_page = Model.Item3.Last();
                Model.Item3.RemoveAt(Model.Item3.Count - 1);
                if (current_page > 1)
                {
                    <a href="@Url.Action("index", "Home", new { order = ViewData["order"],page = current_page - 1 })" class="previous_page"></a>
                }
                <div class="pages_list">
                    @foreach (int page in Model.Item3)
                    {
                        if (page != current_page && page > 0)
                        {
                            <a href="@Url.Action("Index", "Home", new { order = ViewData["order"], page = page })" class="page_value">@page</a>
                        }
                        else if (page == 0)
                        {
                            <span class="page_value">...</span>
                        }
                        else if (page == Model.Item3.Max())
                        {
                            <a href="@Url.Action("Index", "Home", new { order = ViewData["order"], page = page })" class="current_last_page_value">@page</a>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", "Home", new { order = ViewData["order"], page = page })" class="current_page_value">@page</a>
                        }
                    }
                </div>
                if (current_page < Model.Item3.Max())
                {
                    <a href="@Url.Action("Index", "Home", new { order = ViewData["order"], page = current_page + 1 })" class="next_page"></a>
                }
            }
        </div>
    </div>
</div>
